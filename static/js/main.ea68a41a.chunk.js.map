{"version":3,"sources":["utils/idGenerator.ts","ciphers/types/AbstractCipher.ts","ciphers/cipherlib/Base64.ts","utils/cipherutils.ts","ciphers/cipherlib/Clear.ts","ciphers/utils/alphabet.ts","ciphers/cipherlib/Shift.ts","ciphers/index.ts","state/calculations/calculationsSlice.ts","icons/close.svg","icons/settings.svg","components/atoms/button/ImageButton.tsx","components/atoms/cipherdirection/CipherDirection.tsx","components/atoms/modal/Modal.tsx","components/atoms/select/Select.tsx","components/atoms/numberinput/NumberInput.tsx","components/molecules/valuebox/EditView.tsx","components/molecules/cipherarrow/CipherArrow.tsx","components/molecules/valuebox/Valuebox.tsx","components/molecules/cipherchain/CipherChain.tsx","components/molecules/footer/Footer.tsx","components/molecules/header/Header.tsx","state/calculations/calculationsSelectors.ts","app/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","state/store.ts","state/calculations/calculationsMiddleware.ts","providers/StoreProvider.tsx","index.tsx"],"names":["idGenerator","startId","id","generator","AbstractCipher","name","direction","this","next","value","Base64","text","Buffer","from","toString","isConfigurable","object","Clear","alphabet","Object","freeze","alphabetUppercase","map","l","toUpperCase","indexOfLetter","a","b","c","d","e","f","g","h","i","j","k","m","n","o","p","q","r","s","t","u","v","w","x","y","z","modularValue","size","createShift","letter","length","toLowerCase","Shift","settings","shift","split","join","cipherMap","cipherNames","keys","createCipher","serializeCipher","cipher","deserializeCipher","result","initialState","rootValue","calculations","ciphers","calculationsSlice","createSlice","reducers","addCalculation","state","action","push","payload","removeCalculation","splice","index","moveCalculation","fromIndex","movingCalculation","toIndex","addCipher","calculationIndex","removeCipher","cipherIndex","moveCipher","movingCipher","setCipherName","setCipherDirection","setCipherSettings","recalculate","forEach","calculation","reduce","res","encode","decode","setRootValue","actions","ImageButton","icon","title","onClick","className","src","alt","CipherDirection","onChange","Modal","onClose","children","stopPropagation","Select","values","handleChange","useCallback","event","target","NumberInput","labelled","onChangeWrapper","Number","type","getInputByKeyAndValue","key","newValue","EditView","onSettingChange","entries","CipherArrow","onNameChange","onDirectionChange","useState","isEditMode","setEditMode","singleSetting","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","close","newName","createPortal","document","getElementById","Valuebox","onValueChange","CipherChain","dispatch","useDispatch","onDragEnd","destination","source","droppableId","droppableProps","newDirection","placeholder","Footer","realTitle","randomLetter","min","max","Math","floor","random","Header","Array","fill","setTitle","solvedIdx","setSolvedIdx","useEffect","handle","setInterval","newTitle","clearInterval","selectCalculations","selectRootValue","createSelector","selectCalculationSteps","App","useSelector","calculationSteps","step","stepIndex","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","calculationsReducer","customMiddleware","storeApi","includes","store","configureStore","reducer","middleware","getDefaultMiddleware","StoreProvider","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ea68a41a.chunk.js","sourcesContent":["function* idGenerator(startId: number) {\n  let id = startId\n  while (true) yield id++\n}\n\n// generator will never reach return\n// therefore, return type number is okay to use here\nconst generator = idGenerator(0) as unknown as Generator<number, number>\n\nexport const generateId = () => generator.next().value\n","import { generateId } from \"../../utils/idGenerator\"\r\nimport { CipherDirection } from \"./CipherDirection\"\r\nimport { ICipher } from \"./ICipher\"\r\n/**\r\n * Blueprint for ciphers.\r\n * If you want to add a new cipher, extend this class.\r\n */\r\nexport abstract class AbstractCipher implements ICipher {\r\n  abstract readonly name: string\r\n  /**\r\n   * A cipher's {@link id} is important for distinguishing between multiple ciphers of the same kind\r\n   */\r\n  readonly id: number\r\n\r\n  /**\r\n   * By default ciphers encrypt from left to right and decrypt from right to left.\r\n   * This behaviour can be switched.\r\n   */\r\n  direction: CipherDirection = \"encode\"\r\n\r\n  /**\r\n   * Default constructor that takes care of generating the {@link id}\r\n   */\r\n  constructor(id?: number) {\r\n    this.id = id || generateId()\r\n  }\r\n\r\n  /**\r\n   * Takes any string and applies the cipher's encoding to it.\r\n   */\r\n  abstract encode(text: string): string\r\n\r\n  /**\r\n   * Takes any string and removes the cipher's encoding from it.\r\n   */\r\n  abstract decode(text: string): string\r\n}\r\n","import { AbstractCipher } from \"../types/AbstractCipher\"\n\nexport class Base64 extends AbstractCipher {\n  readonly name = \"Base64\"\n\n  encode(text: string): string {\n    return Buffer.from(text).toString(\"base64\")\n  }\n\n  decode(text: string): string {\n    return Buffer.from(text, \"base64\").toString()\n  }\n}\n","import { IConfigurable } from \"../ciphers/types/IConfigurable\"\n\nexport const isConfigurable = (object: unknown): object is IConfigurable =>\n  \"settings\" in (object as IConfigurable)\n","import { AbstractCipher } from \"../types/AbstractCipher\"\n\n/**\n * Not really a cipher.\n * Both {@link encode} and `{@link decode} both return the input string without modifying it.\n */\nexport class Clear extends AbstractCipher {\n  readonly name = \"Clear\"\n\n  encode(text: string): string {\n    return text\n  }\n\n  decode(text: string): string {\n    return text\n  }\n}\n","/**\r\n * List of all letters in the alphabet. Zero based.\r\n * @example const b = alphabet[1]\r\n */\r\nexport const alphabet = Object.freeze([\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"h\",\r\n  \"i\",\r\n  \"j\",\r\n  \"k\",\r\n  \"l\",\r\n  \"m\",\r\n  \"n\",\r\n  \"o\",\r\n  \"p\",\r\n  \"q\",\r\n  \"r\",\r\n  \"s\",\r\n  \"t\",\r\n  \"u\",\r\n  \"v\",\r\n  \"w\",\r\n  \"x\",\r\n  \"y\",\r\n  \"z\",\r\n] as const)\r\n\r\nexport const alphabetUppercase = Object.freeze([\r\n  ...alphabet.map((l) => l.toUpperCase()),\r\n] as const)\r\n\r\n/**\r\n * Maps all letters to their index.\r\n * The reason this is done statically is because typescript can evaluate the types better this way.\r\n * @example const two = indexOfLetter(\"b\")\r\n */\r\nexport const indexOfLetter = Object.freeze({\r\n  a: 0,\r\n  b: 1,\r\n  c: 2,\r\n  d: 3,\r\n  e: 4,\r\n  f: 5,\r\n  g: 6,\r\n  h: 7,\r\n  i: 8,\r\n  j: 9,\r\n  k: 10,\r\n  l: 11,\r\n  m: 12,\r\n  n: 13,\r\n  o: 14,\r\n  p: 15,\r\n  q: 16,\r\n  r: 17,\r\n  s: 18,\r\n  t: 19,\r\n  u: 20,\r\n  v: 21,\r\n  w: 22,\r\n  x: 23,\r\n  y: 24,\r\n  z: 25,\r\n} as const)\r\n","import { AbstractCipher } from \"../types/AbstractCipher\"\nimport { IConfigurable } from \"../types/IConfigurable\"\nimport { alphabet, alphabetUppercase, indexOfLetter } from \"../utils/alphabet\"\n\nconst modularValue = (value: number, size: number) => (value + size) % size\nconst createShift = (value: number) => (letter: string) =>\n  letter in indexOfLetter\n    ? alphabet[\n        modularValue(\n          indexOfLetter[letter as typeof alphabet[number]] + value,\n          alphabet.length\n        )\n      ]\n    : letter.toLowerCase() in indexOfLetter\n    ? alphabetUppercase[\n        modularValue(\n          indexOfLetter[letter.toLowerCase() as typeof alphabet[number]] +\n            value,\n          alphabetUppercase.length\n        )\n      ]\n    : letter\n\nexport class Shift extends AbstractCipher implements IConfigurable {\n  readonly name = \"Shift\"\n\n  settings = { value: 1 }\n\n  encode(text: string): string {\n    const shift = createShift(this.settings.value)\n    return text.split(\"\").map(shift).join(\"\")\n  }\n\n  decode(text: string): string {\n    const shift = createShift(this.settings.value * -1)\n    return text.split(\"\").map(shift).join(\"\")\n  }\n}\n","import { isConfigurable } from \"../utils/cipherutils\"\r\nimport { Base64 } from \"./cipherlib/Base64\"\r\nimport { Clear } from \"./cipherlib/Clear\"\r\nimport { Shift } from \"./cipherlib/Shift\"\r\nimport { SerializedCipher } from \"./types/SerializedCipher\"\r\n\r\n/**\r\n * Assigns simple names to all ciphers\r\n * If you add a cipher, also add it to this list.\r\n */\r\nconst cipherMap = {\r\n  [new Clear().name]: Clear,\r\n  [new Base64().name]: Base64,\r\n  [new Shift().name]: Shift,\r\n} as const\r\n\r\nexport type CipherName = keyof typeof cipherMap\r\nexport type CipherClass = typeof cipherMap[CipherName]\r\nexport type CipherInstance = InstanceType<CipherClass>\r\n\r\nexport const cipherNames = Object.freeze(Object.keys(cipherMap)) as CipherName[]\r\n\r\nexport const createCipher = (name: CipherName, id?: number) =>\r\n  new cipherMap[name](id)\r\n\r\nexport const serializeCipher = (cipher: CipherInstance): SerializedCipher => {\r\n  return {\r\n    name: cipher.name,\r\n    id: cipher.id,\r\n    direction: cipher.direction,\r\n    ...(isConfigurable(cipher) ? { settings: cipher.settings } : {}),\r\n  }\r\n}\r\nexport const deserializeCipher = (cipher: SerializedCipher): CipherInstance => {\r\n  const result = createCipher(cipher.name, cipher.id)\r\n\r\n  result.direction = cipher.direction\r\n  if (isConfigurable(result) && isConfigurable(cipher)) {\r\n    //@ts-expect-error\r\n    result.settings = cipher.settings\r\n  }\r\n\r\n  return result\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport {\r\n  CipherName,\r\n  createCipher,\r\n  deserializeCipher,\r\n  serializeCipher,\r\n} from \"../../ciphers\"\r\nimport { Base64 } from \"../../ciphers/cipherlib/Base64\"\r\nimport { Shift } from \"../../ciphers/cipherlib/Shift\"\r\nimport { CipherDirection } from \"../../ciphers/types/CipherDirection\"\r\nimport { SerializedCipher } from \"../../ciphers/types/SerializedCipher\"\r\nimport { Settings } from \"../../ciphers/types/Settings\"\r\nimport { isConfigurable } from \"../../utils/cipherutils\"\r\n\r\ntype Calculation = {\r\n  ciphers: SerializedCipher[]\r\n  result: string\r\n}\r\n\r\nexport interface CalculationsState {\r\n  rootValue: string\r\n  calculations: Calculation[]\r\n}\r\n\r\nconst decryptBase64 = new Base64()\r\ndecryptBase64.direction = \"decode\"\r\n\r\nconst decryptShift = new Shift()\r\ndecryptShift.direction = \"decode\"\r\n\r\nconst initialState: CalculationsState = {\r\n  rootValue: \"Experience is the teacher of all things.\",\r\n  calculations: [\r\n    {\r\n      ciphers: [serializeCipher(new Shift()), serializeCipher(new Base64())],\r\n      result: \"\",\r\n    },\r\n    // {\r\n    //   ciphers: [serializeCipher(decryptBase64), serializeCipher(decryptShift)],\r\n    //   result: \"\",\r\n    // },\r\n  ],\r\n}\r\n\r\nexport const calculationsSlice = createSlice({\r\n  name: \"calculations\",\r\n  initialState,\r\n  reducers: {\r\n    //#region Calculations\r\n    addCalculation: (\r\n      state,\r\n      action: PayloadAction<{ ciphers: SerializedCipher[] }>\r\n    ) => {\r\n      state.calculations.push({\r\n        ciphers: action.payload.ciphers,\r\n        result: \"\",\r\n      })\r\n    },\r\n    removeCalculation: (state, action: PayloadAction<{ index: number }>) => {\r\n      state.calculations.splice(action.payload.index, 1)\r\n    },\r\n    moveCalculation: (\r\n      state,\r\n      action: PayloadAction<{ fromIndex: number; toIndex: number }>\r\n    ) => {\r\n      const [movingCalculation] = state.calculations.splice(\r\n        action.payload.fromIndex,\r\n        1\r\n      )\r\n      state.calculations.splice(action.payload.toIndex, 0, movingCalculation)\r\n    },\r\n    //#endregion\r\n\r\n    //#region Ciphers\r\n    addCipher(\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        cipher: SerializedCipher\r\n      }>\r\n    ) {\r\n      state.calculations[action.payload.calculationIndex].ciphers.push(\r\n        action.payload.cipher\r\n      )\r\n    },\r\n    removeCipher(\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        cipherIndex: number\r\n      }>\r\n    ) {\r\n      state.calculations[action.payload.calculationIndex].ciphers.splice(\r\n        action.payload.cipherIndex,\r\n        1\r\n      )\r\n    },\r\n    moveCipher: (\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        fromIndex: number\r\n        toIndex: number\r\n      }>\r\n    ) => {\r\n      const [movingCipher] = state.calculations[\r\n        action.payload.calculationIndex\r\n      ].ciphers.splice(action.payload.fromIndex, 1)\r\n      state.calculations[action.payload.calculationIndex].ciphers.splice(\r\n        action.payload.toIndex,\r\n        0,\r\n        movingCipher\r\n      )\r\n    },\r\n    setCipherName(\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        cipherIndex: number\r\n        name: CipherName\r\n      }>\r\n    ) {\r\n      state.calculations[action.payload.calculationIndex].ciphers[\r\n        action.payload.cipherIndex\r\n      ] = serializeCipher(createCipher(action.payload.name))\r\n    },\r\n    setCipherDirection(\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        cipherIndex: number\r\n        direction: CipherDirection\r\n      }>\r\n    ) {\r\n      state.calculations[action.payload.calculationIndex].ciphers[\r\n        action.payload.cipherIndex\r\n      ].direction = action.payload.direction\r\n    },\r\n    setCipherSettings(\r\n      state,\r\n      action: PayloadAction<{\r\n        calculationIndex: number\r\n        cipherIndex: number\r\n        settings: Settings\r\n      }>\r\n    ) {\r\n      const cipher =\r\n        state.calculations[action.payload.calculationIndex].ciphers[\r\n          action.payload.cipherIndex\r\n        ]\r\n\r\n      if (isConfigurable(cipher)) {\r\n        cipher.settings = { ...cipher.settings, ...action.payload.settings }\r\n      }\r\n    },\r\n    //#endregion\r\n\r\n    //#region Results\r\n    recalculate(state) {\r\n      state.calculations.forEach((calculation, index) => {\r\n        calculation.result = calculation.ciphers.reduce(\r\n          (res, cipher) =>\r\n            cipher.direction === \"encode\"\r\n              ? deserializeCipher(cipher).encode(res)\r\n              : deserializeCipher(cipher).decode(res),\r\n          index === 0 ? state.rootValue : state.calculations[index - 1].result\r\n        )\r\n      })\r\n    },\r\n    setRootValue(state, action: PayloadAction<string>) {\r\n      state.rootValue = action.payload\r\n    },\r\n    //#endregion\r\n  },\r\n})\r\n\r\nexport const {\r\n  addCalculation,\r\n  removeCalculation,\r\n  moveCalculation,\r\n  recalculate,\r\n  setRootValue,\r\n  addCipher,\r\n  removeCipher,\r\n  moveCipher,\r\n  setCipherDirection,\r\n  setCipherSettings,\r\n  setCipherName,\r\n} = calculationsSlice.actions\r\n\r\nexport default calculationsSlice.reducer\r\n","export default __webpack_public_path__ + \"static/media/close.4200050a.svg\";","export default __webpack_public_path__ + \"static/media/settings.e8bcb32b.svg\";","import { MouseEventHandler } from \"react\"\nimport \"./ImageButton.css\"\n\ntype Props = { icon: string; title: string; onClick: MouseEventHandler }\n\nexport default function ImageButton({ icon, title, onClick }: Props) {\n  return (\n    <button className=\"btn-img\" onClick={onClick} title={title}>\n      <img src={icon} alt={title}></img>\n    </button>\n  )\n}\n","import { CipherDirection as Direction } from \"../../../ciphers/types/CipherDirection\"\r\nimport \"./CipherDirection.css\"\r\n\r\ntype Props = {\r\n  direction: Direction\r\n  onChange: (newDirection: Direction) => void\r\n}\r\n\r\nexport default function CipherDirection({ direction, onChange }: Props) {\r\n  return (\r\n    <button\r\n      className={`cipherdirection ${direction}`}\r\n      onClick={() => onChange(direction === \"decode\" ? \"encode\" : \"decode\")}\r\n    >\r\n      {direction === \"decode\" ? \"dec\" : \"enc\"}\r\n    </button>\r\n  )\r\n}\r\n","import { PropsWithChildren } from \"react\"\r\nimport \"./Modal.css\"\r\n\r\ninterface Props {\r\n  title: string\r\n  onClose: () => void\r\n}\r\n\r\nexport default function Modal({\r\n  title,\r\n  onClose,\r\n  children,\r\n}: PropsWithChildren<Props>) {\r\n  return (\r\n    <div className=\"modal-backdrop\" onClick={onClose}>\r\n      <div className=\"modal-body\" onClick={(e) => e.stopPropagation()}>\r\n        <h2 className=\"modal-title\">{title}</h2>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ChangeEventHandler, useCallback } from \"react\"\nimport \"./Select.css\"\n\ntype Props = {\n  value: string\n  values: string[]\n  onChange: (newValue: string) => void\n}\n\nexport default function Select({ value, values, onChange }: Props) {\n  const handleChange: ChangeEventHandler<HTMLSelectElement> = useCallback(\n    (event) => onChange(event.target.value),\n    [onChange]\n  )\n\n  return (\n    <select className=\"select\" value={value} onChange={handleChange}>\n      {values.map((v) => (\n        <option key={v} value={v}>\n          {v}\n        </option>\n      ))}\n    </select>\n  )\n}\n","import { ChangeEventHandler, useCallback } from \"react\"\nimport \"./NumberInput.css\"\n\ntype Props = {\n  title: string\n  value: number\n  onChange: (vnewValue: number) => void\n  labelled: boolean\n}\n\nexport default function NumberInput({\n  title,\n  value,\n  onChange,\n  labelled,\n}: Props) {\n  const onChangeWrapper: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      onChange(Number(event.target.value))\n    },\n    [onChange]\n  )\n\n  if (labelled)\n    return (\n      <div className=\"input input-number\">\n        <label className=\"input-title\">{title}</label>\n        <input\n          className=\"input-field\"\n          type=\"number\"\n          value={value}\n          onChange={onChangeWrapper}\n        />\n      </div>\n    )\n\n  return (\n    <input\n      className=\"input-field\"\n      type=\"number\"\n      value={value}\n      onChange={onChangeWrapper}\n    />\n  )\n}\n","import { IConfigurable } from \"../../../ciphers/types/IConfigurable\"\nimport NumberInput from \"../../atoms/numberinput/NumberInput\"\nimport \"./EditView.css\"\n\nexport type CipherSettingValue = Exclude<\n  IConfigurable[\"settings\"],\n  undefined\n>[string]\n\ntype Props = {\n  cipher: IConfigurable // settings must be defined\n  onSettingChange: (key: string, value: CipherSettingValue) => void\n}\n\nexport const getInputByKeyAndValue = (\n  key: string,\n  value: CipherSettingValue,\n  onChange: (key: string, newValue: CipherSettingValue) => void,\n  labelled: boolean = false\n) => {\n  switch (typeof value) {\n    case \"number\":\n      return (\n        <NumberInput\n          key={key}\n          title={key}\n          value={value}\n          onChange={(newValue) => onChange(key, newValue)}\n          labelled={labelled}\n        />\n      )\n    default:\n      return null\n  }\n}\n\nexport default function EditView({ cipher, onSettingChange }: Props) {\n  return (\n    <>\n      {Object.entries(cipher.settings).map(([key, value]) =>\n        getInputByKeyAndValue(key, value, onSettingChange)\n      )}\n    </>\n  )\n}\n","import { useState } from \"react\"\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport { createPortal } from \"react-dom\"\r\nimport { CipherName, cipherNames } from \"../../../ciphers\"\r\nimport { CipherDirection as Direction } from \"../../../ciphers/types/CipherDirection\"\r\nimport { IConfigurable } from \"../../../ciphers/types/IConfigurable\"\r\nimport { SerializedCipher } from \"../../../ciphers/types/SerializedCipher\"\r\nimport close from \"../../../icons/close.svg\"\r\nimport settings from \"../../../icons/settings.svg\"\r\nimport { isConfigurable } from \"../../../utils/cipherutils\"\r\nimport ImageButton from \"../../atoms/button/ImageButton\"\r\nimport CipherDirection from \"../../atoms/cipherdirection/CipherDirection\"\r\nimport Modal from \"../../atoms/modal/Modal\"\r\nimport Select from \"../../atoms/select/Select\"\r\nimport EditView, {\r\n  CipherSettingValue,\r\n  getInputByKeyAndValue,\r\n} from \"../valuebox/EditView\"\r\nimport \"./CipherArrow.css\"\r\n\r\ntype Props = {\r\n  cipher: SerializedCipher\r\n  index: number\r\n  onNameChange: (newName: CipherName) => void\r\n  onDirectionChange: (newDirection: Direction) => void\r\n  onSettingChange: (key: string, value: CipherSettingValue) => void\r\n  onClose: () => void\r\n}\r\n\r\nexport default function CipherArrow({\r\n  cipher,\r\n  onNameChange,\r\n  onDirectionChange,\r\n  onSettingChange,\r\n  onClose,\r\n  index,\r\n}: Props) {\r\n  const [isEditMode, setEditMode] = useState(false)\r\n\r\n  const singleSetting =\r\n    isConfigurable(cipher) && Object.keys(cipher.settings).length === 1\r\n\r\n  return (\r\n    <Draggable draggableId={cipher.id.toString()} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          className=\"cipherarrow\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <div className=\"cipherarrow-iconlist\">\r\n            <ImageButton icon={close} onClick={onClose} title=\"Remove\" />\r\n            {isConfigurable(cipher) && !singleSetting && (\r\n              <ImageButton\r\n                icon={settings}\r\n                onClick={() => setEditMode(true)}\r\n                title=\"Settings\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"cipherarrow-wrapper\">\r\n            <div className=\"cipherarrow-display\">\r\n              <CipherDirection\r\n                direction={cipher.direction}\r\n                onChange={onDirectionChange}\r\n              />\r\n              <Select\r\n                value={cipher.name}\r\n                values={cipherNames}\r\n                onChange={(newName) => onNameChange(newName as CipherName)}\r\n              />\r\n              {isConfigurable(cipher) &&\r\n                singleSetting &&\r\n                getInputByKeyAndValue(\r\n                  ...Object.entries(cipher.settings)[0],\r\n                  onSettingChange\r\n                )}\r\n            </div>\r\n          </div>\r\n          {isEditMode &&\r\n            createPortal(\r\n              <Modal title=\"Settings\" onClose={() => setEditMode(false)}>\r\n                <EditView\r\n                  cipher={cipher as IConfigurable}\r\n                  onSettingChange={onSettingChange}\r\n                />\r\n              </Modal>,\r\n              document.getElementById(\"modal-root\") as HTMLElement\r\n            )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n","import { ChangeEventHandler, useCallback } from \"react\"\nimport \"./Valuebox.css\"\n\ntype Props = {\n  value: string\n  onValueChange: (newValue: string) => void\n}\n\nexport const Valuebox = ({ value, onValueChange }: Props) => {\n  const handleChange: ChangeEventHandler<HTMLTextAreaElement> = useCallback(\n    (event) => onValueChange(event.target.value),\n    [onValueChange]\n  )\n\n  return (\n    <div className=\"cipherbox\">\n      <div className=\"cipherbox-titlebar\">\n        <div className=\"cipherbox-handle\" />\n      </div>\n\n      <textarea\n        className=\"cipherbox-content\"\n        value={value}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n","import { useCallback } from \"react\"\r\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { serializeCipher } from \"../../../ciphers\"\r\nimport { Clear } from \"../../../ciphers/cipherlib/Clear\"\r\nimport {\r\n  addCipher,\r\n  CalculationsState,\r\n  moveCipher,\r\n  removeCipher,\r\n  setCipherDirection,\r\n  setCipherName,\r\n  setCipherSettings,\r\n} from \"../../../state/calculations/calculationsSlice\"\r\nimport CipherArrow from \"../cipherarrow/CipherArrow\"\r\nimport { Valuebox } from \"../valuebox/Valuebox\"\r\nimport \"./CipherChain.css\"\r\n\r\ntype Props = {\r\n  calculation: CalculationsState[\"calculations\"][number]\r\n  calculationIndex: number\r\n}\r\n\r\nexport default function CipherChain({ calculation, calculationIndex }: Props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const onDragEnd = useCallback(\r\n    (result: DropResult) => {\r\n      if (\r\n        // Drop in invalid position\r\n        !result.destination ||\r\n        // Drop on the same spot\r\n        result.destination.index === result.source.index\r\n      ) {\r\n        return\r\n      }\r\n\r\n      dispatch(\r\n        moveCipher({\r\n          calculationIndex,\r\n          fromIndex: result.source.index,\r\n          toIndex: result.destination.index,\r\n        })\r\n      )\r\n    },\r\n    [calculationIndex, dispatch]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"cipherlist\" direction=\"horizontal\">\r\n          {(provided) => (\r\n            <div\r\n              className=\"cipherbox-container\"\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              {calculation.ciphers.map((c, i) => (\r\n                <CipherArrow\r\n                  index={i}\r\n                  key={c.id}\r\n                  cipher={c}\r\n                  onNameChange={(newName) =>\r\n                    dispatch(\r\n                      setCipherName({\r\n                        calculationIndex,\r\n                        cipherIndex: i,\r\n                        name: newName,\r\n                      })\r\n                    )\r\n                  }\r\n                  onSettingChange={(key, value) =>\r\n                    dispatch(\r\n                      setCipherSettings({\r\n                        calculationIndex,\r\n                        cipherIndex: i,\r\n                        settings: { [key]: value },\r\n                      })\r\n                    )\r\n                  }\r\n                  onClose={() =>\r\n                    dispatch(\r\n                      removeCipher({\r\n                        calculationIndex,\r\n                        cipherIndex: i,\r\n                      })\r\n                    )\r\n                  }\r\n                  onDirectionChange={(newDirection) =>\r\n                    dispatch(\r\n                      setCipherDirection({\r\n                        calculationIndex,\r\n                        cipherIndex: i,\r\n                        direction: newDirection,\r\n                      })\r\n                    )\r\n                  }\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <button\r\n        className=\"btn-addcipher\"\r\n        onClick={() =>\r\n          dispatch(\r\n            addCipher({\r\n              calculationIndex,\r\n              cipher: serializeCipher(new Clear()),\r\n            })\r\n          )\r\n        }\r\n      >\r\n        +\r\n      </button>\r\n      <Valuebox value={calculation.result} onValueChange={() => {}} />\r\n    </>\r\n  )\r\n}\r\n","import \"./Footer.css\"\n\nexport default function Footer() {\n  return <footer className=\"app-footer\">Made by me.</footer>\n}\n","import { useEffect, useState } from \"react\"\nimport { alphabet } from \"../../../ciphers/utils/alphabet\"\nimport \"./Header.css\"\n\nconst realTitle = \"Apocrypta\"\n\nconst randomInRange = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min) + min)\nconst randomLetter = () => alphabet[randomInRange(0, alphabet.length)] as string\n\nexport default function Header() {\n  const [title, setTitle] = useState(\n    new Array(realTitle.length).fill(\"\").map(randomLetter)\n  )\n  const [solvedIdx, setSolvedIdx] = useState(0)\n\n  useEffect(() => {\n    const handle = setInterval(() => {\n      const newTitle = []\n      setSolvedIdx(solvedIdx + 0.1)\n      for (let i = 0; i < title.length; i++) {\n        if (i < solvedIdx) {\n          newTitle.push(realTitle[i])\n        } else {\n          newTitle.push(randomLetter())\n        }\n      }\n\n      setTitle(newTitle)\n\n      if (solvedIdx === title.length) {\n        clearInterval(handle)\n      }\n    }, 500 / (realTitle.length * 10))\n\n    return () => clearInterval(handle)\n  })\n\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"app-title\">\n        {title.map((letter, index) => (\n          <span key={index} className=\"app-title-letter\">\n            {letter}\n          </span>\n        ))}\n      </h1>\n    </header>\n  )\n}\n","import { createSelector } from \"reselect\"\r\nimport { RootState } from \"../store\"\r\n\r\nexport const selectCalculations = (state: RootState) => state.calculations\r\nexport const selectRootValue = createSelector(\r\n  selectCalculations,\r\n  (calculations) => calculations.rootValue\r\n)\r\nexport const selectCalculationSteps = createSelector(\r\n  selectCalculations,\r\n  (calculations) => calculations.calculations\r\n)\r\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { serializeCipher } from \"../ciphers\"\nimport { Clear } from \"../ciphers/cipherlib/Clear\"\nimport CipherChain from \"../components/molecules/cipherchain/CipherChain\"\nimport Footer from \"../components/molecules/footer/Footer\"\nimport Header from \"../components/molecules/header/Header\"\nimport { Valuebox } from \"../components/molecules/valuebox/Valuebox\"\nimport {\n  selectCalculationSteps,\n  selectRootValue,\n} from \"../state/calculations/calculationsSelectors\"\nimport {\n  addCalculation,\n  setRootValue,\n} from \"../state/calculations/calculationsSlice\"\nimport \"./App.css\"\n\nexport const App = () => {\n  const dispatch = useDispatch()\n  const rootValue = useSelector(selectRootValue)\n  const calculationSteps = useSelector(selectCalculationSteps)\n\n  return (\n    <div className=\"app dark\">\n      <Header />\n      <main className=\"cipherlist-container\">\n        <Valuebox\n          value={rootValue}\n          onValueChange={(newValue) => {\n            dispatch(setRootValue(newValue))\n          }}\n        />\n        {calculationSteps.map((step, stepIndex) => (\n          <CipherChain\n            key={stepIndex}\n            calculation={step}\n            calculationIndex={stepIndex}\n          />\n        ))}\n        <button\n          className=\"btn-addcalculation\"\n          onClick={() =>\n            dispatch(\n              addCalculation({ ciphers: [serializeCipher(new Clear())] })\n            )\n          }\n        >\n          +\n        </button>\n      </main>\n      <Footer />\n      <div id=\"modal-root\"></div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\"\r\nimport { calculationsMiddleware } from \"./calculations/calculationsMiddleware\"\r\nimport calculationsReducer from \"./calculations/calculationsSlice\"\r\n\r\nconst rootReducer = combineReducers({\r\n  calculations: calculationsReducer,\r\n})\r\n\r\nconst customMiddleware = [calculationsMiddleware]\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    ...customMiddleware,\r\n  ],\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { Middleware } from \"redux\"\r\n\r\nimport { RootState, store } from \"../store\"\r\nimport { recalculate } from \"./calculationsSlice\"\r\n\r\nexport const calculationsMiddleware: Middleware<{}, RootState> =\r\n  (storeApi) => (next) => (action) => {\r\n    next(action)\r\n\r\n    // recalculate all results\r\n    if (\r\n      [\r\n        \"calculations/moveCipher\",\r\n        \"calculations/setRootValue\",\r\n        \"calculations/moveCalculation\",\r\n        \"calculations/setCipherName\",\r\n        \"calculations/setCipherDirection\",\r\n        \"calculations/setCipherSettings\",\r\n      ].includes(action.type)\r\n    ) {\r\n      store.dispatch(recalculate())\r\n    }\r\n  }\r\n","import { PropsWithChildren } from \"react\"\r\nimport { Provider } from \"react-redux\"\r\nimport { store } from \"../state/store\"\r\n\r\nexport default function StoreProvider({ children }: PropsWithChildren<{}>) {\r\n  return <Provider store={store}>{children}</Provider>\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport { App } from \"./app/App\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport StoreProvider from \"./providers/StoreProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\nserviceWorkerRegistration.register()\nreportWebVitals()\n"],"sourceRoot":""}